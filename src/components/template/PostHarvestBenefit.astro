---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

type Props = CollectionEntry<"template">["data"];

const {
  postHarvestBenefit: { backgroundColor, content, title },
} = Astro.props;
---

<section
  id="section-benefit"
  class={`flex w-full flex-col gap-5 xl:px-50 lg:px-50 md:px-50 px-5 py-10 ${backgroundColor}`}
>
  <h1 class="text-4xl font-bold text-neutral-600 uppercase">{title}</h1>

  {
    content.map((item) => {
      switch (item.type) {
        case "quote":
          return (
            <p
              class={`px-3 text-justify text-lg ${item.border ? "border-x border-black" : ""}`}
            >
              <i>
                <b>{item.text}</b>
              </i>
            </p>
          );

        case "paragraph":
          return <p class="text-lg">{item.text}</p>;

        case "protocols":
          return item.protocols.map((protocol) => (
            <div class="flex xl:flex-row lg:flex-row md:flex-row flex-col gap-5 h-full">
              <div class="xl:w-2/4 lg:w-2/4 md:w-2/4 w-full flex-1">
                <h2 class="py-4 text-3xl text-neutral-600 uppercase">
                  {protocol.title}
                </h2>

                <div class="flex flex-row gap-5">
                  <div class="w-2/4 flex-1">
                    {protocol.items.map((detail) => {
                      switch (detail.category) {
                        case "imageText":
                          return (
                            <div class="flex items-center justify-start gap-5 overflow-hidden relative group animate-trigger-right">
                              <Image
                                inferSize={true}
                                class={`size-${detail.size ?? 20} object-fill object-center rounded-lg transform transition-all duration-500 ease-out group-hover:scale-105`}
                                src={detail.image}
                                alt={detail.alt}
                              />
                              <p class="text-lg">{detail.text}</p>
                            </div>
                          );

                        case "keyValue":
                          return (
                            <div class="w-full py-3">
                              <h3 class="border-b text-xl font-bold mb-3 pb-2">
                                {detail.key}
                              </h3>
                              <p class="px-10 text-lg">{detail.value}</p>
                            </div>
                          );

                        case "list":
                          return (
                            <ul class="list-disc flex flex-col gap-3 px-10">
                              {detail.items.map((li) => (
                                <li>
                                  <p class="text-lg">{li}</p>
                                </li>
                              ))}
                            </ul>
                          );
                      }
                    })}
                  </div>
                </div>
              </div>

              <div class="flex flex-col gap-5 justify-between items-center flex-1">
                {protocol.mainImage && (
                  <div class="w-full flex-none rounded-lg bg-neutral-300 overflow-hidden relative group animate-trigger-left">
                    <Image
                      inferSize={true}
                      src={protocol.mainImage.src}
                      class="object-fill object-center rounded-lg transform transition-all duration-500 ease-out group-hover:scale-105"
                      alt={protocol.mainImage.alt}
                    />
                  </div>
                )}

                {protocol.video && (
                  <div class="w-full h-100 flex-none">
                    <iframe
                      loading="lazy"
                      allowfullscreen
                      title={protocol.video.title}
                      class="w-full h-full rounded-lg overflow-hidden"
                      src={protocol.video.src}
                      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    />
                  </div>
                )}

                {protocol.video && <p class="text-lg">{protocol.video.text}</p>}
              </div>
            </div>
          ));
      }
    })
  }
</section>

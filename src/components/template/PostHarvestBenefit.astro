---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'template'>['data'];

const {
  postHarvestBenefit: { backgroundColor, content, title },
} = Astro.props;
---

<section
  id="section-benefit"
  class={`flex w-full flex-col gap-5 px-5 py-10 md:px-30 lg:px-50 xl:px-50 ${backgroundColor}`}
>
  <h1 class="text-4xl font-bold text-neutral-600 uppercase">{title}</h1>

  {
    content.map((item) => {
      switch (item.type) {
        case 'quote':
          return (
            <p class={`px-3 text-justify text-lg ${item.border ? 'border-x border-black' : ''}`}>
              <i>
                <b>{item.text}</b>
              </i>
            </p>
          );

        case 'paragraph':
          return <p class="text-lg">{item.text}</p>;

        case 'protocols':
          return item.protocols.map((protocol) => (
            <div class="flex h-full flex-col gap-5 md:flex-row lg:flex-row xl:flex-row">
              <div class="w-full flex-1 md:w-2/4 lg:w-2/4 xl:w-2/4">
                <h2 class="py-4 text-3xl text-neutral-600 uppercase">{protocol.title}</h2>

                <div class="flex flex-row gap-5">
                  <div class="w-2/4 flex-1">
                    {protocol.items.map((detail) => {
                      switch (detail.category) {
                        case 'imageText':
                          return (
                            <div class="group animate-trigger-right relative flex items-center justify-start gap-5 overflow-hidden">
                              <Image
                                inferSize={true}
                                loading="eager"
                                class={`size-${detail.size ?? 20} transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105`}
                                src={detail.image}
                                alt={detail.alt}
                              />
                              <p class="text-lg">{detail.text}</p>
                            </div>
                          );

                        case 'keyValue':
                          return (
                            <div class="w-full py-3">
                              <h3 class="mb-3 border-b pb-2 text-xl font-bold">{detail.key}</h3>
                              <p class="px-10 text-lg">{detail.value}</p>
                            </div>
                          );

                        case 'list':
                          return (
                            <>
                              {!!detail.key && (
                                <h3 class="mb-3 border-b pb-2 text-xl font-bold">{detail.key}</h3>
                              )}
                              <ul class="flex list-disc flex-col gap-3 px-10">
                                {detail.items?.map((li) => (
                                  <li>
                                    <p class="text-lg">{li}</p>
                                  </li>
                                ))}
                              </ul>
                            </>
                          );
                      }
                    })}
                  </div>
                </div>
              </div>

              <div class="flex flex-1 flex-col items-center justify-between gap-5">
                {protocol.mainImage.length &&
                  protocol.mainImage.map((image: { src: string; alt: string }) => (
                    <div class="group animate-trigger-left relative w-full flex-none overflow-hidden rounded-lg bg-neutral-300">
                      <Image
                        inferSize={true}
                        loading="eager"
                        src={image.src}
                        class="transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105"
                        alt={image.alt}
                      />
                    </div>
                  ))}

                {protocol.paragraph && (
                  <div class="w-full flex-none">
                    <p class="text-lg">{protocol.paragraph}</p>
                  </div>
                )}

                {protocol.video && (
                  <div class="h-100 w-full flex-none">
                    <iframe
                      loading="lazy"
                      allowfullscreen
                      title={protocol.video.title}
                      class="h-full w-full overflow-hidden rounded-lg"
                      src={protocol.video.src}
                      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    />
                  </div>
                )}

                {protocol.video && <p class="text-lg">{protocol.video.text}</p>}
              </div>
            </div>
          ));
      }
    })
  }
</section>

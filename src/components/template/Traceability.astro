---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

import ImgDialog from '@/components/ui/dialog/Img';
import { cn } from '@/lib/cn';
type Props = CollectionEntry<'template'>['data'];

const { traceability } = Astro.props;
---

<section
  id="section-traceability"
  class="flex w-full flex-col gap-5 px-5 py-10 md:px-30 lg:px-50 xl:px-50"
>
  <!-- Título principal -->
  <h1 class="text-4xl font-bold text-neutral-600 uppercase">
    {traceability.title}
  </h1>

  <div class="my-3 flex flex-col gap-5 md:flex-row lg:flex-row xl:flex-row">
    <!-- Columna de texto -->
    <div class="flex w-full flex-1 flex-col gap-5 md:w-2/4 lg:w-2/4 xl:w-2/4">
      <!-- Subtítulo -->
      <h3 class="py-4 text-3xl text-neutral-600 uppercase">
        {traceability.subtitle}
      </h3>

      <!-- Contenido dinámico -->

      {
        traceability.content.map(
          (content: {
            type: string;
            text: string;
            quote: string;
            author: string;
            border: boolean;
          }) => {
            switch (content.type) {
              case 'highlight':
                return (
                  <p class={cn('border-x border-black px-3 text-justify text-lg')}>
                    <i>
                      <b>{content.text}</b>
                    </i>
                  </p>
                );
              case 'paragraph':
                return <p class="text-lg">{content.text}</p>;
              case 'bold':
                return (
                  <p class="text-lg">
                    <b class="font-bold"> {content.text} </b>
                  </p>
                );
              case 'multiImage':
                return (
                  <div class="flex flex-row justify-evenly gap-5">
                    {content.src.map((image) => (
                      <Image
                        inferSize={true}
                        loading="eager"
                        src={image}
                        alt={content.alt}
                        class="transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105"
                      />
                    ))}
                  </div>
                );
              case 'richText':
                return (
                  <p class="text-lg">
                    {content.text.map((item: { type: string; text: string }) => {
                      switch (item.type) {
                        case 'text':
                          return item.text;
                        case 'bold':
                          return <b class="font-bold"> {item.text} </b>;
                        case 'italic':
                          return <i class="font-italic"> {item.text} </i>;
                        case 'link':
                          return (
                            <a class="font-bold text-blue-500 hover:underline" href={item.text}>
                              {' '}
                              {item.text}{' '}
                            </a>
                          );
                        default:
                          return item.text;
                      }
                    })}
                  </p>
                );
            }
          },
        )
      }
    </div>

    <!-- Columna de imágenes -->
    <div
      class="flex w-full flex-1 flex-col items-start justify-start gap-3 md:w-2/4 lg:w-2/4 xl:w-2/4"
    >
      {
        traceability.imagesDialog && (
          <div
            class:list={[
              'group animate-trigger-left relative size-auto h-80 w-auto flex-none -translate-y-10 scale-40 rounded-lg bg-white pt-4 md:-translate-y-30 lg:-translate-y-30 xl:-translate-y-30',
            ]}
          >
            <ImgDialog client:load>
              <Image
                inferSize={true}
                loading="eager"
                src={traceability.imagesDialog.src}
                alt={traceability.imagesDialog.alt}
                class="transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105"
              />
            </ImgDialog>
          </div>
        )
      }

      {
        traceability.images.map((image, index) => (
          <div
            class:list={[
              'group animate-trigger-left relative w-full flex-none overflow-hidden rounded-lg bg-neutral-300 animate-once animate-ease-in-out',
            ]}
          >
            <Image
              inferSize={true}
              loading="eager"
              src={image.src}
              alt={image.alt}
              class="w-full transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105"
            />
          </div>
        ))
      }
    </div>
  </div>
</section>

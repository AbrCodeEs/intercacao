---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

import ImgDialog from '@/components/ui/dialog/Img';
type Props = CollectionEntry<'template'>['data'];

const { traceability } = Astro.props;
---

<section
  id="section-traceability"
  class="flex w-full flex-col gap-5 px-5 py-10 md:px-30 lg:px-50 xl:px-50"
>
  <!-- Título principal -->
  <h1 class="text-4xl font-bold text-neutral-600 uppercase">
    {traceability.title}
  </h1>

  <div class="my-3 flex flex-col gap-5 md:flex-row lg:flex-row xl:flex-row">
    <!-- Columna de texto -->
    <div class="flex w-full flex-1 flex-col gap-5 md:w-2/4 lg:w-2/4 xl:w-2/4">
      <!-- Subtítulo -->
      <h3 class="py-4 text-3xl text-neutral-600 uppercase">
        {traceability.subtitle}
      </h3>

      <!-- Contenido dinámico -->
      {
        traceability.content.map((item) => (
          <p
            class:list={[
              'text-lg',
              item.type === 'highlight' && 'border-x border-black px-3 text-justify',
            ]}
          >
            {item.type === 'highlight' ? (
              <i>
                <b>{item.text}</b>
              </i>
            ) : (
              item.text
            )}
          </p>
        ))
      }
    </div>

    <!-- Columna de imágenes -->
    <div
      class="flex w-full flex-1 flex-col items-start justify-start gap-3 md:w-2/4 lg:w-2/4 xl:w-2/4"
    >
      {
        traceability.images.map((image, index) => (
          <div
            class:list={[
              'group animate-trigger-left relative size-auto flex-none rounded-lg bg-white pt-4',
              index === 0 &&
                'h-80 w-auto -translate-y-10 scale-40 rounded-lg bg-white md:-translate-y-30 lg:-translate-y-30 xl:-translate-y-30',
              index !== 0 && 'overflow-hidden',
            ]}
          >
            {image.useDialog ? (
              <ImgDialog client:load>
                <Image
                  inferSize={true}
                  loading="eager"
                  src={image.src}
                  alt={image.alt}
                  class="transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105"
                />
              </ImgDialog>
            ) : (
              <Image
                inferSize={true}
                loading="eager"
                src={image.src}
                alt={image.alt}
                class="transform rounded-lg object-fill object-center transition-all duration-500 ease-out group-hover:scale-105"
              />
            )}
          </div>
        ))
      }
    </div>
  </div>
</section>

---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

import { Header } from '@/components/ui/header';
import BaseHead from '@/components/parts/BaseHead.astro';
import Footer from '@/components/parts/Footer.astro';
import logo from '@/images/chuao/logo-intercacao.png';

import { getLangFromUrl } from '@/lib/translations';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, keywords } = Astro.props;

const lang = getLangFromUrl(Astro.url);

const navItems = [
  {
    title: lang === 'en' ? 'Home' : 'Inicio',
    href: '#section-home',
  },
  {
    title: lang === 'en' ? 'Flavours world' : 'Mundo de sabores',
    href: '#section-flavours',
  },
  {
    title: lang === 'en' ? 'Cacao gourmet' : 'Cacao gourmet',
    href: '#section-gourmet',
  },
  {
    title: lang === 'en' ? 'Fundación Quirico Prosperi' : 'Fundación Quirico Prosperi',
    href: '#section-prosperi',
  },
  {
    title: lang === 'en' ? 'Sobre Nosotros' : 'Sobre Nosotros',
    href: '#section-about',
  },
  {
    title: lang === 'en' ? 'Contactanos' : 'Contactanos',
    href: '#section-contact',
  },
];
---

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const animationConfig = {
      right: 'animate-fade-right',
      left: 'animate-fade-left',
      top: 'animate-fade-up',
      bottom: 'animate-fade-down',
    };

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const target = entry.target;

            // Determinar la dirección de la animación
            const direction = Array.from(target.classList)
              .find((className) => className.startsWith('animate-trigger-'))
              ?.split('-')
              .pop();

            if (direction && animationConfig[direction]) {
              // Aplicar clases de animación correspondientes
              target.classList.add(
                animationConfig[direction],
                'animate-once',
                'animate-ease-in-out',
              );

              // Eliminar clase de opacidad inicial
              target.classList.remove('opacity-0');

              // Opcional: Dejar de observar después de la animación
              observer.unobserve(target);
            }
          }
        });
      },
      {
        root: null,
        rootMargin: '0px',
        threshold: 0.1,
      },
    );

    // Observar todos los elementos con clase de trigger
    document.querySelectorAll('[class*="animate-trigger-"]').forEach((el) => {
      // Configuración inicial de opacidad
      el.classList.add('opacity-0');
      observer.observe(el);
    });
  });
</script>

<html lang="es">
  <head>
    <BaseHead title={title} description={description} keywords={keywords} />
  </head>

  <body>
    <Header client:load items={navItems}>
      <Image class="size-auto" src={logo} alt="Logo" />
    </Header>
    <main class="font-rawline relative">
      <slot />
    </main>
  </body>
</html>
